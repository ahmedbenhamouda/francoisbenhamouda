// Generated by dia2code
#ifndef AI__DEEPAI__H
#define AI__DEEPAI__H

#include <random>
#include <vector>

namespace engine {
  class Engine;
};
namespace state {
  class Jeu;
};
namespace engine {
  class Command;
};
namespace ai {
  class HeuristicAI;
  class AI;
}

#include "AI.h"

namespace ai {

  /// class DeepAI - 
  class DeepAI : public ai::AI {
    // Attributes
  public:
    std::mt19937 randeng;
    int color;
    /// 			
    engine::Engine* engine;
    state::Jeu* jeu;
    std::vector<state::Unite*> liste_unites;
    std::vector<state::Batiment*> liste_batiments;
    std::vector<engine::Command*> liste_commands;
    std::vector<int> liste_score;
    std::vector<state::Flag*> liste_flags_ennemie;
    state::Flag* flag_allies;
    std::vector<state::Unite*> liste_ennemies;
    int command_iter     = 0;
    HeuristicAI* cloneAI;
    // Operations
  public:
    DeepAI ();
    DeepAI (int color, engine::Engine* engine, state::Jeu* jeu);
    void fillStateList ();
    void fillCommandList ();
    void run ();
    ~DeepAI ();
    std::vector<state::Position> enemyCote (state::Position pos);
    void runHeuristic ();
    void runMinMax ();
    void selectFinalCommand ();
    void ListeScore ();
    void scoreDeplacement (engine::Command* command);
    void scoreAttack (engine::Command* command);
    // Setters and Getters
  };

};

#endif
