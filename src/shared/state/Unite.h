// Generated by dia2code
#ifndef STATE__UNITE__H
#define STATE__UNITE__H

#include <vector>

namespace state {
  class Position;
  class Flag;
  class Terrain;
  class Unite;
}

#include "Position.h"
#include "TerrainTypeId.h"
#include "Terrain.h"
#include "Flag.h"

namespace state {

  /// class Unite - 
  class Unite {
    // Associations
    // Attributes
  public:
    Position position;
    int color;
    int vie;
    int prix;
    int mvt;
    int puissance;
    int id;
    bool can_move     = true;
    bool can_attack     = true;
    Flag* has_flag     = nullptr;
    // Operations
  public:
    Unite ();
    Unite (Position position, int color);
    virtual std::vector<Position> getLegalMove (Terrain* terrain);
    virtual int getvie ();
    virtual int getprix ();
    virtual int getmvt ();
    virtual int getpuissance ();
    virtual int getId ();
    virtual int getColor ();
    virtual int getTileId ();
    virtual void setvie (int v);
    virtual void setpuissance (int p);
    virtual void attacker (Unite* unite);
    virtual void move (Position position);
    Flag* PossedeDrapeau ();
    virtual ~Unite ();
    virtual bool isLegalMove (Position pos, Terrain* terrain);
    void processMoves (Position posInit, int dx, int dy, std::vector<std::vector<int>>& processed, int moves_left, Terrain* terrain);
    // Setters and Getters
  };

};

#endif
